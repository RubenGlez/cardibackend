name: Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '19'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint --if-present

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '19'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --if-present
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist

  test:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '19'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test --if-present

  deploy:
    needs: [lint, build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fake deploy
        if: ${{ github.event_name == 'push' }}
        run: echo 'fake deployment done!'
      # - name: Deploy to Heroku
      #   if: ${{ github.event_name == 'push' }}
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: ${{secrets.HEROKU_APP}}
      #     heroku_email: ${{secrets.HEROKU_API_EMAIL}}
      #     healthcheck: "https://${{secrets.HEROKU_APP}}.herokuapp.com/health"
      #     rollbackonhealthcheckfailed: true